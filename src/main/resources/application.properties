#cloudinary.name=${CLOUD_USER}
#cloudinary.key=${CLOUD_KEY}
#cloudinary.secret=${CLOUD_SECRET}
#sparkpost.key=${SPARKPOST_KEY}
spring.datasource.url=jdbc:postgresql://${HOST}:5432/${DATABASE}
spring.datasource.username=${DB_USER}
spring.datasource.password=${DB_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=create
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.hbm2ddl.auto=create
spring.jpa.defer-datasource-initialization=true
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.sql.init.mode=always
# spring.sql.init.mode=embedded
server.error.include-message=never
server.error.include-stacktrace=never
spring.mvc.pathmatch.matching-strategy = ANT_PATH_MATCHER
spring.jackson.serialization.FAIL_ON_EMPTY_BEANS=false
# spring.jpa.properties.hibernate.event.merge.entity_copy_observer=allow

# Seguridad JWT
jwt.token.validity=6000000
jwt.signing.key=signingkey
jwt.authorities.key=roles
jwt.token.prefix=Bearer
jwt.header.string=Authorization

